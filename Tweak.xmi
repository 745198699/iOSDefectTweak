#import "hooks/CustomURLProtocol.h"
#import "hooks/SocketClass.h"
#import "hooks/DelegateProxies.h"

//Hooks for C functions
#import "hooks/CCCryptHook.h"
#import "hooks/SSLWriteHook.h"
#import "hooks/KeychainHooks.h"


SocketClass *gsocket ;


//Hooks for OC functions
%group MITM 
#include "hooks/NSUIWebViewHook.xm" 
#include "hooks/NSURLConnectionHook.xm" 
#include "hooks/NSURLSessionHook.xm" 
%end // end group

%group Traffic
#include "hooks/TrafficHook.xm" 
%end

%group URL
#include "hooks/URLHook.xm"
%end

%group keyboardHook
#include "hooks/KeyboardHook.xm"
%end

%group PlistHooks 
#include "hooks/PlistHooks.xm" 
%end

%group NSUserDefaultsHooks 
#include "hooks/NSUserDefaultsHooks.xm" 
%end


static NSString *applistPreferenceFilePath = @"/private/var/mobile/Library/Preferences/com.softsec.iosdefect.app.plist";
static NSString *settingsPreferenceFilePath = @"/private/var/mobile/Library/Preferences/com.softsec.iosdefect.settings.plist";

static BOOL getBoolFromPreferences(NSMutableDictionary *preferences, NSString *preferenceValue) {
    id value = [preferences objectForKey:preferenceValue];
    if (value == nil) {
        return NO; // default to NO
    }
    return [value boolValue];
}



%ctor{
    NSAutoreleasePool *pool = [[NSAutoreleasePool alloc] init];
    
    gsocket = [[SocketClass alloc] init];
    
    NSString *appId = [[NSBundle mainBundle] bundleIdentifier];
    // Load applist preferences
    NSMutableDictionary *appPreferences = [[NSMutableDictionary alloc] initWithContentsOfFile:applistPreferenceFilePath];
    
    if (! getBoolFromPreferences(appPreferences,appId) ) {
        NSLog(@"yujianbo: the app [%@] is not in list",appId);
        [appPreferences release];
        [pool drain];
        return;
    }
    //load settings preferences
    NSMutableDictionary *settingsPreferences = [[NSMutableDictionary alloc] initWithContentsOfFile:settingsPreferenceFilePath];
    NSLog(@"yujianbo: the app [%@] is in list",appId);
    //init default tweak
    %init(URL);
    %init(keyboardHook);
    

    if (getBoolFromPreferences(settingsPreferences, @"MITM")) {
        NSLog(@"yujianbo: start MITM");
        %init(MITM);
        [SSLWriteHook enableHook];
    }
    if (getBoolFromPreferences(settingsPreferences, @"Traffic")) {
        NSLog(@"yujianbo: start Traffic");
        %init(Traffic);
    }
    if (getBoolFromPreferences(settingsPreferences, @"CCCrypt")) {
        NSLog(@"yujianbo: start CCCrypt");
        [CCCryptHook enableHook];
    }
    if (getBoolFromPreferences(settingsPreferences, @"KeyChain")) {
        NSLog(@"yujianbo: start KeyChain");
        [KeychainHooks enableHooks];
    }
    if (getBoolFromPreferences(settingsPreferences, @"Plist")) {
        NSLog(@"yujianbo: start Plist");
        %init(PlistHooks);
    }
    
    if (getBoolFromPreferences(settingsPreferences, @"NSUserDefaults")) {
        NSLog(@"yujianbo: start NSUserDefaultHook");
        %init(NSUserDefaultsHooks);
    }
    
    [appPreferences release];
    [settingsPreferences release];
    [pool drain];
}